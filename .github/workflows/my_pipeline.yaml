name: Java CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: '3.9.2'  # Ensures compatibility with the enforcer plugin

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Increment stable version number
      run: |
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Current version: $CURRENT_VERSION"
        
        # Remove "-SNAPSHOT" if present and ensure version format is correct
        BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-SNAPSHOT//')
        IFS='.' read -r -a VERSION_PARTS <<< "$BASE_VERSION"

        # Ensure version has three components (major.minor.patch)
        while [ ${#VERSION_PARTS[@]} -lt 3 ]; do
          VERSION_PARTS+=("0")
        done

        # Increment patch version
        NEW_PATCH_VERSION=$((VERSION_PARTS[2] + 1))
        NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$NEW_PATCH_VERSION"

        echo "New version: $NEW_VERSION"
        
        # Update pom.xml with the new version
        mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false

    - name: Build and test the project
      run: mvn clean install

    - name: Package the .jar file
      run: mvn package

    - name: Upload .jar as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app
        path: target/*.jar

    - name: Commit version update
      run: |
        git config --local user.name "github-actions"
        git config --local user.email "github-actions@github.com"
        git add pom.xml
        git commit -m "Updated version to $NEW_VERSION"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
