name: CI/CD Pipeline with Docker and Maven

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: '3.9.2'

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Increment stable version number
      run: |
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | tr -d '[:space:]')
        echo "Current version: '$CURRENT_VERSION'"
        
        BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-SNAPSHOT//')
        echo "Base version without SNAPSHOT: '$BASE_VERSION'"

        IFS='.' read -r -a VERSION_PARTS <<< "$BASE_VERSION"
        echo "Version parts: ${VERSION_PARTS[@]}"

        while [ ${#VERSION_PARTS[@]} -lt 3 ]; do
          VERSION_PARTS+=("0")
        done

        NEW_PATCH_VERSION=$((VERSION_PARTS[2] + 1))
        NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$NEW_PATCH_VERSION"

        echo "New version: $NEW_VERSION"
        
        mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false
        echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Check VERSION after setting
      run: echo "VERSION is now: ${{ env.VERSION }}"

    - name: Commit version update if version changed
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git diff --exit-code || (git add pom.xml && git commit -m "Update version to $NEW_VERSION" && git push)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean and Build the project
      run: mvn clean install

    - name: Package the .jar file
      run: mvn package

    - name: Upload .jar as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-app
        path: target/*.jar

  docker:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: java-app
        path: target

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    
    - name: Debug VERSION variable
      run: echo "VERSION is set to: ${{ env.VERSION }}"

    - name: Build Docker Image
      run: |
        docker build -t java-app-${{ env.VERSION }} -f ./multistage.dockerfile .

    - name: Tag Docker Image
      run: docker tag java-app-${{ env.VERSION }} ${{ secrets.DOCKER_USER }}/do22:java-app-${{ env.VERSION }}

    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USER }}/do22:java-app-${{ env.VERSION }}
